#!/bin/sh
. "$(dirname "$0")/_/husky.sh"

# 执行 commitlint 校验
npx --no -- commitlint --config commitlint.config.cjs --edit $1

# --------------------------------------将提交的信息写入到 MD 文档中--------------------------------------
# # 获取最新的提交哈希值
# COMMIT_HASH=$(git rev-parse HEAD)

# # 获取提交信息
# COMMIT_MSG_FILE=$1
# COMMIT_MSG=$(cat $COMMIT_MSG_FILE)

# # 定义日志文件路径
# LOG_FILE="COMMIT_LOG.md"
# TEMP_LOG_FILE="TEMP_COMMIT_LOG.md"

# # 获取当前日期和时间
# CURRENT_DATE=$(date "+%Y-%m-%d %H:%M:%S")

# # 获取提交作者
# AUTHOR_NAME=$(git config user.name)
# AUTHOR_EMAIL=$(git config user.email)

# # 获取当前分支名
# BRANCH_NAME=$(git rev-parse --abbrev-ref HEAD)

# # 检查提交信息是否以特定字符串结尾
# STRING_TO_SEARCH="log"
# if echo "$COMMIT_MSG" | grep -qE "$STRING_TO_SEARCH"; then
#   # 将提交信息格式化并追加到日志文件中
#   {
#     echo "## $CURRENT_DATE"
#     echo ""
#     echo "\`\`\`"
#     echo "Hash: $COMMIT_HASH"
#     echo "Author: $AUTHOR_NAME <$AUTHOR_EMAIL>"
#     echo "Branch: $BRANCH_NAME"
#     if [ -f "$COMMIT_MSG_FILE" ]; then
#       echo "Message: $COMMIT_MSG"
#     else
#       echo "Message: Commit message file not found!"
#     fi
#     echo "\`\`\`"
#     echo ""
#   } >> $TEMP_LOG_FILE

#   # 如果日志文件存在，将临时文件内容与原日志文件内容合并，新的内容在顶部
#   if [ -f "$LOG_FILE" ]; then
#     cat $LOG_FILE >> $TEMP_LOG_FILE
#   fi
#   mv $TEMP_LOG_FILE $LOG_FILE

#   # 将日志文件添加到暂存区
#   git add $LOG_FILE
# fi
